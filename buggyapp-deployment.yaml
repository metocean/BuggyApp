---
## Service
  apiVersion: v1
  kind: Service
  metadata:
    name: buggyapp
  spec:
    ports:
    - port: 8080
      protocol: TCP    
      targetPort: 8080
    selector:
      app: buggyapp
    #type: LoadBalancer
---
## Deployment
  apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    name: buggyapp
  spec:
    selector:
      matchLabels: 
        app: buggyapp
    replicas: 2
    minReadySeconds: 15
    strategy:
      type: RollingUpdate
      rollingUpdate: 
        maxUnavailable: 1
        maxSurge: 1
    template:
      metadata:
        labels:
          app: buggyapp
      spec:
        containers:
          - image: sergeimelman/buggyapp:8
            imagePullPolicy: Always
            name: buggyapp
            ports:
              - containerPort: 8080
            livenessProbe:
              httpGet:
                path: /health
                port: 8080
              initialDelaySeconds: 3
              periodSeconds: 3
              timeoutSeconds: 1
              successThreshold: 1
              failureThreshold: 1
            resources:
              limits:
                memory: "1G"
                #cpu: "500m" # equal to 0.5 cpu
              requests:
                memory: "10M"
                #cpu: "400m"
            #readinessProbe:
            #  httpGet: {path: /health1, port: 8080}
            #  initialDelaySeconds: 5
            #  periodSeconds: 5
---
## Ingress load balancer
  apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: buggyappingress
    annotations:
      kubernetes.io/ingress.class: traefik
  spec:
    rules:
    - http:
        paths:
        - path: /
          backend:
            serviceName: buggyapp
            servicePort: 8080
